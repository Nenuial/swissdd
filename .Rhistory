devtools::load_all(".")
get_swissvotes()
urls <- jsonlite::fromJSON("https://opendata.swiss/api/3/action/package_show?id=echtzeitdaten-am-abstimmungstag-zu-eidgenoessischen-abstimmungsvorlagen")
#
grepl("[0-9]{2}",urls$result$resources$download_url)
#
gsub("[0-9]{2}",urls$result$resources$download_url)
#
grepl("[0-9]{2}",urls$result$resources$download_url)
grep("[0-9]{2}",urls$result$resources$download_url)
sub("[0-9]{2}",urls$result$resources$download_url)
gsub("[0-9]{2}","",urls$result$resources$download_url)
gsub("[0-9]{4}","",urls$result$resources$download_url)
#
# gsub("[0-9]{2,}","\\1",urls$result$resources$download_url)
#
#
# substring(urls$result$resources$download_url, regexpr("[0-9]{8}", urls$result$resources$download_url))
#
# gsub("[^0-9]{4,}", "", urls$result$resources$download_url)
#
#
# sub(".* ", "", x)
regmatches(urls$result$resources$download_url, "[0-9]{4}")
#
# gsub("[0-9]{2,}","\\1",urls$result$resources$download_url)
#
#
# substring(urls$result$resources$download_url, regexpr("[0-9]{8}", urls$result$resources$download_url))
#
# gsub("[^0-9]{4,}", "", urls$result$resources$download_url)
#
#
# sub(".* ", "", x)
regmatches(urls$result$resources$download_url[1], "[0-9]{4}")
urls$result$resources$download_url[1]
#
# gsub("[0-9]{2,}","\\1",urls$result$resources$download_url)
#
#
# substring(urls$result$resources$download_url, regexpr("[0-9]{8}", urls$result$resources$download_url))
#
# gsub("[^0-9]{4,}", "", urls$result$resources$download_url)
#
#
# sub(".* ", "", x)
regmatches("[0-9]{4}",urls$result$resources$download_url[1])
grep("[0-9]{4}",urls$result$resources$download_url)
grepl("[0-9]{4}",urls$result$resources$download_url)
sub("[0-9]{4}",urls$result$resources$download_url)
sub("[0-9]{4}",m,urls$result$resources$download_url)
regmatches("[0-9]{4}",urls$result$resources$download_url, invert = FALSE)
regmatches("[0-9]{4}",urls$result$resources$download_url[1], invert = FALSE)
regmatches(urls$result$resources$download_url[1],"[0-9]{4}", invert = FALSE)
#
grepl("[0-9]{2}",urls$result$resources$download_url)
#
#
sub("\\D{8}","",urls$result$resources$download_url)
sub("[0-9]{4}","",urls$result$resources$download_url)
sub("[0-9]{8}","",urls$result$resources$download_url)
sub("[0-9]{8}","",urls$result$resources$download_url,inverse=TRUE)
?sub
sub("[0-9]{8}","",urls$result$resources$download_url,invert=TRUE)
regexec("[0-9]{8}",urls$result$resources$download_url)
grep("[0-9]{8}",urls$result$resources$download_url)
sub("[0-9]{8}","",urls$result$resources$download_url,invert=TRUE)
sub("[0-9]{8}","",urls$result$resources$download_url)
sub("[0-9]{8}",urls$result$resources$download_url)
substring(urls$result$resources$download_url, regexpr("[0-9]{8}",urls$result$resources$download_url) + 1)
substring(urls$result$resources$download_url, regexpr("[0-9]{8}",urls$result$resources$download_url) + 8)
substring(urls$result$resources$download_url, regexpr("[0-9]{8}",urls$result$resources$download_url) + 1)
substring(urls$result$resources$download_url, regexpr("[0-9]{8}",urls$result$resources$download_url) + 1,8)
substring(urls$result$resources$download_url, regexpr("[0-9]{8}",urls$result$resources$download_url) + 1)
?substring
substring(urls$result$resources$download_url, regexpr("[0-9]{6}",urls$result$resources$download_url) + 1)
substring(urls$result$resources$download_url, regexpr("[0-9]{8}",urls$result$resources$download_url))
substring(urls$result$resources$download_url, regexpr("[0-9]{8}",urls$result$resources$download_url),8)
regexpr("[0-9]{8}",urls$result$resources$download_url)
substring(urls$result$resources$download_url, regexpr("[0-9]{8}",urls$result$resources$download_url),16)
substring(urls$result$resources$download_url, regexpr("[0-9]{8}",urls$result$resources$download_url))
substring(urls$result$resources$download_url, regexpr("[0-9]{8}",urls$result$resources$download_url))
regexpr("[0-9]{8}",urls$result$resources$download_url)
substring(urls$result$resources$download_url, regexpr("[0-9]{8}",urls$result$resources$download_url),regexpr("[0-9]{8}",urls$result$resources$download_url)+8)
substring(urls$result$resources$download_url, regexpr("[0-9]{8}",urls$result$resources$download_url),regexpr("[0-9]{8}",urls$result$resources$download_url)+7)
available_votedates <- function(list){
urls <- jsonlite::fromJSON("https://opendata.swiss/api/3/action/package_show?id=echtzeitdaten-am-abstimmungstag-zu-eidgenoessischen-abstimmungsvorlagen")
dates <-substring(urls$result$resources$download_url, regexpr("[0-9]{8}",urls$result$resources$download_url),regexpr("[0-9]{8}",urls$result$resources$download_url)+7)
dates
}
max(available_votedates()
available_votedates()
urls <- jsonlite::fromJSON("https://opendata.swiss/api/3/action/package_show?id=echtzeitdaten-am-abstimmungstag-zu-eidgenoessischen-abstimmungsvorlagen")
dates <-substring(urls$result$resources$download_url, regexpr("[0-9]{8}",urls$result$resources$download_url),regexpr("[0-9]{8}",urls$result$resources$download_url)+7)
dates
as.numeric(dates)
available_votedates <- function(list){
urls <- jsonlite::fromJSON("https://opendata.swiss/api/3/action/package_show?id=echtzeitdaten-am-abstimmungstag-zu-eidgenoessischen-abstimmungsvorlagen")
dates <-substring(urls$result$resources$download_url, regexpr("[0-9]{8}",urls$result$resources$download_url),regexpr("[0-9]{8}",urls$result$resources$download_url)+7)
as.numeric(dates)
}
max(available_votedates())
a <- avaliable_votedates()
a <- available_votedates()
map(a,~get_swissvotes(votedate = .x))
heeeeelllooo <- map_dfr(a,~get_swissvotes(votedate = .x))
heeeeelllooo <- map_dfr(a[1:4],~get_swissvotes(votedate = .x))
a[1:4]
heeeeelllooo <- map_dfr(a[1:4],~get_swissvotes(votedate = .x))
View(heeeeelllooo)
save.image("~/repos/swissdd/R/votedates.R.RData")
